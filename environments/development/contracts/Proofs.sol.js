// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"majors","outputs":[{"name":"","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[{"name":"beacon","type":"address"}],"name":"removeBeacon","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"major","type":"bytes32"},{"name":"updatedTimestamp","type":"uint256"}],"name":"proveMe","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"addresses","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"beacon","type":"address"},{"name":"major","type":"bytes32"},{"name":"previousHash","type":"string"}],"name":"addBeacon","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"previousHash","type":"string"}],"name":"updatePrevious","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"minValue","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"beacons","outputs":[{"name":"major","type":"bytes32"},{"name":"previousHash","type":"string"},{"name":"updatedTimestamp","type":"uint256"},{"name":"index","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"getMajorsCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"major","type":"bytes32"},{"indexed":false,"name":"previousHash","type":"string"},{"indexed":false,"name":"updatedTimestamp","type":"uint256"}],"name":"onUpdatedPrevious","type":"event"}],
    binary: "606060405260008054600160a060020a0319163317905567016345785d8a0000600155610964806100306000396000f3606060405236156100825760e060020a600035046309c30e9281146100845780631eea8e45146100c1578063505d810c146100e6578063699f200f146101015780637468054f14610122578063753c48ed1461018b5780638da5cb5b1461023d578063963e63c71461024f5780639cad172a14610258578063cd77f04414610283575b005b61028760043560048054829081101561000257506000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015481565b610082600435600080548190600160a060020a03908116339091161461058a57610002565b61008260043560243560015460009034101561083b57610002565b610299600435600360205260009081526040902054600160a060020a031681565b604080516020604435600481810135601f810184900484028501840190955284845261008294813594602480359593946064949293910191819084018382808284375094965050505050505060008054600160a060020a03908116339091161461035557610002565b6040805160206004803580820135601f810184900484028501840190955284845261008294919360249390929184019190819084018382808284375094965050505050505033600160a060020a0316600090815260026020818152604083206001908101805486518287529584902091959281161561010002600019011693909304601f908101839004840193919286019083901061074057805160ff19168380011785555b50610770929150610410565b610299600054600160a060020a031681565b61028760015481565b6102b66004356002602081905260009182526040909120805491810154600382015460019092019184565b6004545b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051858152908101839052606081018290526080602082018181528554600260018216156101000260001901909116049183018290529060a0830190869080156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b50509550505050505060405180910390f35b600083815260036020526040812054600160a060020a03161461037757610002565b50600454604080516080810182528481526020818101858152428385015260608301859052600160a060020a038816600090815260028084529481208451815591518051600184810180548186529487902097989597909691851615610100026000190190941694909404601f9081018590048401949193929091019083901061042457805160ff19168380011785555b506104549291505b808211156104c75760008155600101610410565b82800160010185558215610408579182015b82811115610408578251826000505591602001919060010190610436565b5050604082810151600283015560609290920151600391820155600085815260209190915220805473ffffffffffffffffffffffffffffffffffffffff191685179055600480546001810180835582818380158290116104cb578183600052602060002091820191016104cb9190610410565b5090565b50505091909060005260206000209001600085909190915055507f6714ceece1d0d9469efe3774762d00f9a73ffa2da9f81162d6bc2fd633d82f7283834260405180848152602001806020018381526020018281038252848181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105755780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050565b5050600160a060020a03811660009081526002602081905260408220805460038201548483556001838101805487825593969295929390929181161561010002600019011604601f8190106106b657505b5050600060028201819055600391820181905583815260209190915260409020805473ffffffffffffffffffffffffffffffffffffffff19169055600480546000198101908110156100025750805460008290527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19a8101549190839081101561000257507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b830191909155805460001981018083559091908280158290116106d4578183600052602060002091820191016106d49190610410565b601f0160209004906000526020600020908101906105db9190610410565b505050508060026000506000600360005060006004600050868154811015610002575050507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9093015481526020838152604080832054600160a060020a031683529290522001555050565b82800160010185558215610231579182015b82811115610231578251826000505591602001919060010190610752565b505033600160a060020a0316600090815260026020818152604080842042938101849055548151818152918201849052606082840181815287519184019190915286517f6714ceece1d0d9469efe3774762d00f9a73ffa2da9f81162d6bc2fd633d82f7296929588959094936080850192878301929091829185918391869190600490601f850104600f02600301f150905090810190601f1680156108295780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150565b50600082815260036020908152604080832054600160a060020a0316808452600292839052922001548290101561087157610002565b600160a060020a0381811660009081526002602081815260409283902092517f9d496885000000000000000000000000000000000000000000000000000000008152600481019182526001938401805494851615610100026000190190941692909204602483018190523390941693639d49688593928291604491909101908490801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b5050925050506000604051808303816000876161da5a03f1156100025750505050505056",
    unlinked_binary: "606060405260008054600160a060020a0319163317905567016345785d8a0000600155610964806100306000396000f3606060405236156100825760e060020a600035046309c30e9281146100845780631eea8e45146100c1578063505d810c146100e6578063699f200f146101015780637468054f14610122578063753c48ed1461018b5780638da5cb5b1461023d578063963e63c71461024f5780639cad172a14610258578063cd77f04414610283575b005b61028760043560048054829081101561000257506000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015481565b610082600435600080548190600160a060020a03908116339091161461058a57610002565b61008260043560243560015460009034101561083b57610002565b610299600435600360205260009081526040902054600160a060020a031681565b604080516020604435600481810135601f810184900484028501840190955284845261008294813594602480359593946064949293910191819084018382808284375094965050505050505060008054600160a060020a03908116339091161461035557610002565b6040805160206004803580820135601f810184900484028501840190955284845261008294919360249390929184019190819084018382808284375094965050505050505033600160a060020a0316600090815260026020818152604083206001908101805486518287529584902091959281161561010002600019011693909304601f908101839004840193919286019083901061074057805160ff19168380011785555b50610770929150610410565b610299600054600160a060020a031681565b61028760015481565b6102b66004356002602081905260009182526040909120805491810154600382015460019092019184565b6004545b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60408051858152908101839052606081018290526080602082018181528554600260018216156101000260001901909116049183018290529060a0830190869080156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b50509550505050505060405180910390f35b600083815260036020526040812054600160a060020a03161461037757610002565b50600454604080516080810182528481526020818101858152428385015260608301859052600160a060020a038816600090815260028084529481208451815591518051600184810180548186529487902097989597909691851615610100026000190190941694909404601f9081018590048401949193929091019083901061042457805160ff19168380011785555b506104549291505b808211156104c75760008155600101610410565b82800160010185558215610408579182015b82811115610408578251826000505591602001919060010190610436565b5050604082810151600283015560609290920151600391820155600085815260209190915220805473ffffffffffffffffffffffffffffffffffffffff191685179055600480546001810180835582818380158290116104cb578183600052602060002091820191016104cb9190610410565b5090565b50505091909060005260206000209001600085909190915055507f6714ceece1d0d9469efe3774762d00f9a73ffa2da9f81162d6bc2fd633d82f7283834260405180848152602001806020018381526020018281038252848181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105755780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050565b5050600160a060020a03811660009081526002602081905260408220805460038201548483556001838101805487825593969295929390929181161561010002600019011604601f8190106106b657505b5050600060028201819055600391820181905583815260209190915260409020805473ffffffffffffffffffffffffffffffffffffffff19169055600480546000198101908110156100025750805460008290527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19a8101549190839081101561000257507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b830191909155805460001981018083559091908280158290116106d4578183600052602060002091820191016106d49190610410565b601f0160209004906000526020600020908101906105db9190610410565b505050508060026000506000600360005060006004600050868154811015610002575050507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9093015481526020838152604080832054600160a060020a031683529290522001555050565b82800160010185558215610231579182015b82811115610231578251826000505591602001919060010190610752565b505033600160a060020a0316600090815260026020818152604080842042938101849055548151818152918201849052606082840181815287519184019190915286517f6714ceece1d0d9469efe3774762d00f9a73ffa2da9f81162d6bc2fd633d82f7296929588959094936080850192878301929091829185918391869190600490601f850104600f02600301f150905090810190601f1680156108295780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150565b50600082815260036020908152604080832054600160a060020a0316808452600292839052922001548290101561087157610002565b600160a060020a0381811660009081526002602081815260409283902092517f9d496885000000000000000000000000000000000000000000000000000000008152600481019182526001938401805494851615610100026000190190941692909204602483018190523390941693639d49688593928291604491909101908490801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b5050925050506000604051808303816000876161da5a03f1156100025750505050505056",
    address: "0xe6cd530aa6cf09d7b8a5a1cf7991315585a890a8",
    generated_with: "2.0.6",
    contract_name: "Proofs"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Proofs error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Proofs error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Proofs error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Proofs error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Proofs = Contract;
  }

})();
